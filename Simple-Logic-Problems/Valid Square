

#include <stdbool.h>

// Function to calculate the squared distance between two points
int squaredDistance(int *x, int *y) {
    return (x[0] - y[0]) * (x[0] - y[0]) + (x[1] - y[1]) * (x[1] - y[1]);
}

bool validSquare(int* p1, int p1Size, int* p2, int p2Size, int* p3, int p3Size, int* p4, int p4Size) {
    int distances[6], index = 0;

    // Calculate and store the squared distances between all pairs of points
    distances[index++] = squaredDistance(p1, p2);
    distances[index++] = squaredDistance(p1, p3);
    distances[index++] = squaredDistance(p1, p4);
    distances[index++] = squaredDistance(p2, p3);
    distances[index++] = squaredDistance(p2, p4);
    distances[index++] = squaredDistance(p3, p4);

    // Sort the distances array
    for (int i = 0; i < 5; i++) {
        for (int j = i + 1; j < 6; j++) {
            if (distances[i] > distances[j]) {
                int temp = distances[i];
                distances[i] = distances[j];
                distances[j] = temp;
            }
        }
    }

    // Check the first 4 distances (sides) are equal and the last 2 distances (diagonals) are equal
    return distances[0] > 0 &&
           distances[0] == distances[1] &&
           distances[1] == distances[2] &&
           distances[2] == distances[3] &&
           distances[4] == distances[5];
}
